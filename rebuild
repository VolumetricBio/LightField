#!/bin/bash

LIGHTFIELD_ROOT=/home/lumen/Volumetric/LightField

# shellcheck disable=SC1090
source "${LIGHTFIELD_ROOT}/shared-stuff.sh"

[ -z "${BUILDDIR}" ] && export BUILDDIR="${LIGHTFIELD_ROOT}/build"

function usage () {
    cat <<HERE
Usage: rebuild [-cnqrx] [--clean|--nuke-first|--qmake-anyway|--release]
Runs "qmake" to regenerate the Makefile, if necessary, then "make" to
rebuild LightField.

  -c,     --clean          Run "make distclean" before running "make".
  -n, -x, --nuke-first     Delete and recreate the build directory before
                             running "make".
  -q,     --qmake-anyway   Run "qmake" even if timestamps suggest it
                             shouldn't be necessary.
  -r,     --release        Perform a release build instead of a debug
                             build.
HERE
}

function rebuild () {
    local BUILD=debug
    local CLEAN=
    local NUKE=
    local QMAKE=
    local ARGS=
    local LASTBUILDMODE=
    local ADDTOCONFIG=

    [ "${RELEASE_TRAIN}" = "dlp4710" ] && ADDTOCONFIG="CONFIG+=dlp4710"

    if ! getopt -Q -q -n 'rebuild' -o 'cnqrx' -l 'clean,nuke-first,qmake-anyway,release' -- "$@"; then
        usage
        return
    fi

    ARGS=$(getopt -n 'rebuild' -o 'cnqrx' -l 'clean,nuke-first,qmake-anyway,release' -- "$@")
    eval set -- "$ARGS"

    while [ -n "${1}" ]
    do
        case "${1}" in
            '-c'        | '--clean'        ) CLEAN=yes     ;;
            '-n' | '-x' | '--nuke-first'   )  NUKE=yes     ;;
            '-q'        | '--qmake-anyway' ) QMAKE=yes     ;;
            '-r'        | '--release'      ) BUILD=release ;;

            '--' )
                shift
                break
                ;;

            * )
                return
                ;;
        esac
        shift
    done

    if [ -d "${BUILDDIR}" ]
    then
        if [ ! -f "${BUILDDIR}/.lastbuildmode" ]
        then
            echo "${BUILD}-${RELEASE_TRAIN}" > "${BUILDDIR}/.lastbuildmode"
            NUKE=yes
        fi

        LASTBUILDMODE="$(<${BUILDDIR}/.lastbuildmode)"
        if [ -n "${LASTBUILDMODE}" ] && [ "${LASTBUILDMODE}" != "${BUILD}-${RELEASE_TRAIN}" ]
        then
            echo Switching from "${LASTBUILDMODE}" to "${BUILD}-${RELEASE_TRAIN}".
            NUKE=yes
        fi

        if [ -n "${NUKE}" ]
        then
            unset CLEAN
            QMAKE=yes
            rm -dr "${BUILDDIR}" && mkdir -p "${BUILDDIR}"
        fi
    else
        mkdir -p "${BUILDDIR}"
    fi

    # shellcheck disable=SC2164
    cd "${BUILDDIR}"

    if [ -n "${CLEAN}" ]
    then
        QMAKE=yes
        make distclean
    fi

    if [ -n "${QMAKE}" ] || [ ! -f Makefile ] || [ ../qt/lf.pro -nt Makefile ]
    then
        qmake CONFIG+="${BUILD}" ${ADDTOCONFIG} ../qt/lf.pro || return
        echo "${BUILD}-${RELEASE_TRAIN}" > "${BUILDDIR}/.lastbuildmode"
    fi

    if make -q 1> /dev/null 2>&1
    then
        echo "make: Nothing to be done for 'first'."
        return
    fi

    # shellcheck disable=SC2015
    [ -f buildinfo.o ] && rm buildinfo.o 1> /dev/null 2>&1 || true
    make -j"${QT_BUILD_JOBS-12}"
}

rebuild "$@"
